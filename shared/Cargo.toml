[package]
name = "lakers-shared"
version.workspace = true
edition = "2021"
authors = ["Mališa Vučinić <malisa.vucinic@inria.fr>"]
license.workspace = true
description = "EDHOC crypto library constants crate"
repository.workspace = true
# It's implied, but still better for consistency to have it explicit.
readme.workspace = true
keywords.workspace = true
categories.workspace = true

[dependencies]
typenum = { version = "1.18.0", features = ["const-generics", "no_std"] }
pyo3 = { version = "0.22", features = ["extension-module"], optional = true }
hex = { version = "0.4.3", optional = true }
defmt-or-log = { version = "0.2.1", default-features = false }
log = { version = "0.4", optional = true }
defmt = { version = "0.3", optional = true }
hax-lib.workspace = true

[dev-dependencies]
hexlit = "0.5.3"
rstest = "0.21.0"

[lints.rust]
# Some parts of the buffer API (eg. from_hex) are just not typecheckable.
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(hax)'] }

[features]
default = [  ]
python-bindings = ["pyo3", "hex"]

## For all arbitrarily limited buffers, pick the maximum.
##
## This provides an easy way to allow unconstrained systems to stomach larger
## sizes (especially for experimentation).
large_buffers = [
    "max_message_size_len_1024",
    "max_kdf_content_len_1024",
    "max_buffer_len_1024",
    "max_ead_len_1024",
    "max_connid_encoded_len_24",
]

## Precise control of `MAX_MESSAGE_SIZE_LEN`.
##
## If any of those is set, they override the default of 192. If multiple are
## set, the highest wins.

max_message_size_len_256 = []
max_message_size_len_320 = []
max_message_size_len_384 = []
max_message_size_len_448 = []
max_message_size_len_512 = []
max_message_size_len_1024 = []

## Precise control of `MAX_KDF_CONTENT_LEN`.
##
## If any of those is set, they override the default of 256. If multiple are
## set, the highest wins.

max_kdf_content_len_320 = []
max_kdf_content_len_384 = []
max_kdf_content_len_448 = []
max_kdf_content_len_512 = []
max_kdf_content_len_1024 = []

## Precise control of `MAX_BUFFER_LEN`.
##
## If any of those is set, they override the default of 320. If multiple are
## set, the highest wins.

max_buffer_len_384 = []
max_buffer_len_448 = []
max_buffer_len_512 = []
max_buffer_len_1024 = []

## Precise control of `MAX_EAD_LEN`.
##
## If any of those is set, they override the default of 64. If multiple are
## set, the highest wins.

max_ead_len_128 = []
max_ead_len_192 = []
max_ead_len_256 = []
max_ead_len_384 = []
max_ead_len_512 = []
max_ead_len_768 = []
max_ead_len_1024 = []

## Control of `MAX_CONNID_ENCODED_LEN`.
##
## If this is not set, the minimum sensible default (8 bytes) is used.

max_connid_encoded_len_24 = []
